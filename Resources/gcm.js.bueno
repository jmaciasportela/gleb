// ****************************************************************************************************************
// some init stuff

var now = new Date(),
serviceIntent = Ti.Android.currentService.getIntent(),
tickerText = 'GGM Notification',
contentText = 'Received at ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();

// ****************************************************************************************************************
// getting the payload

Ti.API.debug("GLEB - SERVICE GCM - ServiceIntent: "+ JSON.stringify(serviceIntent));
Ti.API.debug("GLEB - SERVICE GCM - PushId: "+ serviceIntent.getStringExtra('pushId'));
Ti.API.debug("GLEB - SERVICE GCM - Message: "+ serviceIntent.getStringExtra('message'));
Ti.API.debug("GLEB - SERVICE GCM - Payload: "+ serviceIntent.getStringExtra('payload'));
Ti.API.debug("GLEB - SERVICE GCM - Serial: "+ serviceIntent.getStringExtra('serial'));

//Check if serial exist
if (!require('config/data').contains(serviceIntent.getStringExtra('serial'))){
    Ti.API.debug("GLEB - SERVICE GCM - Notificacion "+ serviceIntent.getStringExtra('serial')+" recibida.");
    
    if (serviceIntent.getStringExtra('pushId') == "0000"){
        tickerText = serviceIntent.getStringExtra('message');
        contentText = serviceIntent.getStringExtra('message');
        contentTitle = "GLEB Alert";   
        require('config/data').push(serviceIntent.getStringExtra('serial'));
    }    

    var db = Ti.Database.install(Titanium.Filesystem.resourcesDirectory+'sql/actions.sqlite','actions');
    try {
        db.execute('INSERT INTO actions (pushId,message,payload,serial) VALUES("'+serviceIntent.getStringExtra('pushId')+'","'+serviceIntent.getStringExtra('message')+'","'+serviceIntent.getStringExtra('payload')+'","'+serviceIntent.getStringExtra('serial')+'");');
        Ti.API.debug("GLEB - SERVICE GCM - Notificacion saved on DB");
    }
    catch (err){
        Ti.API.error("GLEB - SERVICE GCM - Fail to save in DB");
    }   
    db.close();

    
    // ****************************************************************************************************************
    // intents & notification
    
    // we an intent and a pending intent in order to open the app when the users clicks on the notification
    var notificationIntent = Ti.Android.createIntent({
        className: 'es.thinetic.ngleb.NewglebActivity',
        packageName: 'es.thinetic.v2.gleb',
    });
    /*
    notificationIntent.putExtra("pushId", serviceIntent.getStringExtra('pushId'));
    notificationIntent.putExtra("mesage", serviceIntent.getStringExtra('message'));
    notificationIntent.putExtra("payload", serviceIntent.getStringExtra('payload'));
    notificationIntent.putExtra("serial", serviceIntent.getStringExtra('serial'));
    
    Ti.App.Properties.setString("push_pushId", serviceIntent.getStringExtra('pushId'));
    Ti.App.Properties.setString("push_mesage", serviceIntent.getStringExtra('message'));
    Ti.App.Properties.setString("push_payload", serviceIntent.getStringExtra('payload'));
    Ti.App.Properties.setString("push_serial", serviceIntent.getStringExtra('serial'));
    
    var props = Ti.App.Properties.listProperties();

for (var i=0, ilen=props.length; i<ilen; i++){
    var value = Ti.App.Properties.getString(props[i]);
    Ti.API.info(props[i] + ' = ' + value);
}
    
        */
       
    // Create a PendingIntent to tie together the Activity and Intent
    // check http://docs.appcelerator.com/titanium/2.1/index.html#!/api/Titanium.Android.PendingIntent
    var intent = Ti.Android.createPendingIntent({
        intent: notificationIntent,
        flags: Titanium.Android.FLAG_UPDATE_CURRENT
    });
    
    // check http://docs.appcelerator.com/titanium/2.1/index.html#!/api/Titanium.Android.Notification
    var notification = Ti.Android.createNotification({
    	contentIntent: intent,
    	contentTitle: contentTitle,
    	contentText: contentText,
    	tickerText: tickerText,
    	icon: Ti.App.Android.R.drawable.appicon,
    	// icon: Ti.App.Android.R.drawable.notification,
    	defaults:Titanium.Android.NotificationManager.DEFAULT_ALL,
    	flags : Titanium.Android.ACTION_DEFAULT | Titanium.Android.FLAG_AUTO_CANCEL | Titanium.Android.FLAG_SHOW_LIGHTS
    });
    
    Ti.Android.NotificationManager.notify((new Date().getTime()), notification);
}
else Ti.API.debug("GLEB - SERVICE GCM - Notificacion "+ serviceIntent.getStringExtra('serial')+" ya estaba procesada, no se hace nada.");

// stop this service
Ti.Android.stopService(serviceIntent);












